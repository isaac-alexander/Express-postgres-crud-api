install package.json - npm init -y
install dependencies - npm i express dotenv pg cors joi 
install nodemon as a dev dependency - npm i --save-dev nodemon 

express - express framework to build the rest api

dotenv - to get or fetch the values from the dotenv file

pg- the postgres package which allows us to connect to the database and do the queries in order to process or retrieve data from the database

cors - for cross origin 

joi - for schema validation. Any request that comes to the contoroller should be validated

update the "script" in the package.json file  - "dev": "nodemon src/index.js"
update add type in the package.json file  -   "type":"module",

- build the express server


 TO CREATE A TABLE
- From the data folder, create a data.sql file
  in the data.sql file create a query with 
  CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
 )

-to run the sql query, create a new file createUserTable.js
import pool from "../config/db.js";
import pool from "../config/db.js";

have a createUserTable function 
import pool from "../config/db.js";

const createUserTable = async () => {
    const queryText = `
    CREATE TABLE IF NOT EXISTS users (
    id SERIAL PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT NOW()
)
    `;

    try {
        pool.query(queryText);
        console.log("User table created if not exists");
    } catch (error) {
        console.log("Error creating users table : ", error);
    }
};

export default createUserTable;
 stop the server, the call the createUserTable() in the index.js after the error handling

            TO USE THE joi
- Create an input validator file in the middleware
- Import the Joi from "joi"

Define the User schema for how the inputs should look like using the joi.Object 

const userScheme = Joi.object({
    name: Joi.string().min(3).required(),
    email: Joi.string().email().required(),
});

Create a validator function and export it

const validateUser = (req, res, next) => {
    const {error} = userScheme.validate(req.body);
    if(error) return res.status(400).json({
        status: 400,
        message: error.details[0].message,
    });
    next()
};

export default validateUser;